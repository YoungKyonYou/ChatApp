networks:
  replica:
    driver: bridge
services:
  redis:
    container_name: redis
    image: redis:6.2
    restart: 'always'
    ports:
      - "6379:6379"
    networks:
      - replica
    volumes:
      - ./conf:/usr/local/etc/redis/
      # Redis 서버를 실행할 때 사용되는 명령어입니다. 이 명령어는 Redis 서버를 구동하고 지정된 경로의 Redis 설정 파일(redis.conf)을 사용하여 구성
    command: bash -c "apt-get update && apt-get install vim -y && redis-server /usr/local/etc/redis/redis.conf"
  #    deploy:
  #      resources:
  #        limits:
  #          memory: 512M
  zookeeper:
    image: confluentinc/cp-zookeeper
    restart: 'always'
    networks:
      - replica
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2181:2181"

  kafka1:
    image: confluentinc/cp-kafka
    restart: 'always'
    hostname: kafka1
    ports:
      - "9093:9093"
    networks:
      - replica
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:19091,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  kafka2:
    image: confluentinc/cp-kafka
    restart: 'always'
    hostname: kafka2
    ports:
      - "9094:9094"
    networks:
      - replica
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:19091,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  kafka3:
    image: confluentinc/cp-kafka
    restart: 'always'
    hostname: kafka3
    ports:
      - "9095:9095"
    networks:
      - replica
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 3
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:19091,PLAINTEXT_HOST://localhost:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

  #    deploy:
  #      resources:
  #        limits:
  #          memory: 512M
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: 'always'
    networks:
      - replica
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: "kafka1:19091"
    depends_on:
      - kafka1